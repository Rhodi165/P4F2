# In this scenario:
# - There are two orders of one shipment each:
#   - There are insufficiently many non-faulty products to complete both orders.
#   - Teams should submit the orders even if they are not able to completely fulfil them.

options:
  insert_models_over_bins: true
  spawn_extra_models: false
  model_type_aliases:
    order_part1: piston_rod_part
    order_part2: gear_part
    order_part3: disk_part

orders:
  order_0:
    announcement_condition: time
    announcement_condition_value: 0.0
    shipment_count: 2
    products:
      product_0:
        type: piston_rod_part
        pose:
          xyz: [0.1, -0.2, 0]
          rpy: [0, 0, 0]
      product_1:
        type: piston_rod_part
        pose:
          xyz: [-0.1, -0.2, 0]
          rpy: [0, 0, 0]
      product_2:
        type: disk_part
        pose:
          xyz: [0.15, 0.15, 0]
          rpy: [0, 0, 0]
      product_3:
        type: disk_part
        pose:
          xyz: [-0.15, 0.15, 0]
          rpy: [0, 0, 0]
      product_4:
        type: disk_part
        pose:
          xyz: [0.0, 0.15, 0]
          rpy: [0, 0, 0]
      product_5:
        type: piston_rod_part
        pose:
          xyz: [0, -0.2, 0]
          rpy: [0, 0, 0]

models_over_bins:
  bin1:
    models:
      disk_part:
        xyz_start: [0.15, 0.1, 0.0]
        xyz_end: [0.35, 0.3, 0.0]
        rpy: [0, 0, 'pi/4']
        num_models_x: 2
        num_models_y: 2
  bin2:
    models:
      disk_part:
        xyz_start: [0.1, 0.1, 0.0]
        xyz_end: [0.1, 0.37, 0.0]
        rpy: [0, 0, 'pi/4']
        num_models_x: 1
        num_models_y: 2
  bin5:
    models:
      piston_rod_part:
        xyz_start: [0.1, 0.1, 0.0]
        xyz_end: [0.3, 0.25, 0.0]
        rpy: [0, 0, 'pi/4']
        num_models_x: 2
        num_models_y: 2

faulty_products:
  - disk_part_126
  - disk_part_72
 
random_seed: 1
